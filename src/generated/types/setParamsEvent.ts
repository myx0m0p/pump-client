/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/web3.js';

export type SetParamsEvent = {
  feeRecipient: Address;
  initialVirtualTokenReserves: bigint;
  initialVirtualSolReserves: bigint;
  initialRealTokenReserves: bigint;
  tokenTotalSupply: bigint;
  feeBasisPoints: bigint;
};

export type SetParamsEventArgs = {
  feeRecipient: Address;
  initialVirtualTokenReserves: number | bigint;
  initialVirtualSolReserves: number | bigint;
  initialRealTokenReserves: number | bigint;
  tokenTotalSupply: number | bigint;
  feeBasisPoints: number | bigint;
};

export function getSetParamsEventEncoder(): Encoder<SetParamsEventArgs> {
  return getStructEncoder([
    ['feeRecipient', getAddressEncoder()],
    ['initialVirtualTokenReserves', getU64Encoder()],
    ['initialVirtualSolReserves', getU64Encoder()],
    ['initialRealTokenReserves', getU64Encoder()],
    ['tokenTotalSupply', getU64Encoder()],
    ['feeBasisPoints', getU64Encoder()],
  ]);
}

export function getSetParamsEventDecoder(): Decoder<SetParamsEvent> {
  return getStructDecoder([
    ['feeRecipient', getAddressDecoder()],
    ['initialVirtualTokenReserves', getU64Decoder()],
    ['initialVirtualSolReserves', getU64Decoder()],
    ['initialRealTokenReserves', getU64Decoder()],
    ['tokenTotalSupply', getU64Decoder()],
    ['feeBasisPoints', getU64Decoder()],
  ]);
}

export function getSetParamsEventCodec(): Codec<
  SetParamsEventArgs,
  SetParamsEvent
> {
  return combineCodec(getSetParamsEventEncoder(), getSetParamsEventDecoder());
}
